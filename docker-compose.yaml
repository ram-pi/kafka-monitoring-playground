version: '3.8'
services:
    elasticsearch:
      container_name: elasticsearch
      environment:
        - xpack.security.enabled=false
        - discovery.type=single-node 
      ports:
          - '9200:9200'
          - '9300:9300'
      image: 'docker.elastic.co/elasticsearch/elasticsearch:${ELK_TAG}'

    metricbeat:
      container_name: metricbeat
      image: 'docker.elastic.co/beats/metricbeat:${ELK_TAG}'
      volumes:
        - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      depends_on:
        kibana:
          condition: service_healthy

    kibana:
      depends_on:
        - elasticsearch
      container_name: kibana
      ports:
          - '5601:5601'
      image: 'docker.elastic.co/kibana/kibana:${ELK_TAG}'
      environment:
        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200 
      healthcheck:
        test: ["CMD", "curl", "-f", "localhost:5601/api/status"]
        start_period: 10s
        interval: 10s
        timeout: 5s
        retries: 5

    # TICK STACK - https://www.influxdata.com/time-series-platform/
    telegraf:
      container_name: telegraf
      image: telegraf:${TELEGRAF_TAG}
      volumes:
        - /var/run/docker.sock:/tmp/docker.sock:rw
        - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
        - ./telegraf/kafka-lag.sh:/etc/telegraf/kafka-lag.sh:rw
      depends_on:
        - elasticsearch
        - kafka 
        - influxdb
      command: "--debug"
      ports:
        - "8084:8084"

    influxdb:
      container_name: influxdb
      image: influxdb:${INFLUX_TAG}
      ports:
        - "8086:8086"

    chronograf:
      container_name: chronograf
      image: chronograf:${CHRONOGRAF_TAG}
      environment:
        KAPACITOR_URL: http://kapacitor:9092
        INFLUXDB_URL: http://influxdb:8086
      ports:
        - "8888:8888"
      depends_on:
        - influxdb
        - kapacitor

    kapacitor:
      container_name: kapacitor
      image: kapacitor:1.3.3
      hostname: kapacitor
      environment:
        KAPACITOR_HOSTNAME: kapacitor
        KAPACITOR_INFLUXDB_0_URLS_0: http://influxdb:8086
      depends_on:
        - influxdb

    grafana:
      container_name: grafana
      image: grafana/grafana:${GRAFANA_TAG}
      volumes:
        - ./grafana/datasources:/etc/grafana/provisioning/datasources
        - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
        - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      ports:
        - "3000:3000"
      depends_on:
        - influxdb
        - elasticsearch

    # Confluent - Kafka
    zookeeper:
      container_name: "zookeeper"
      image: confluentinc/cp-zookeeper:${CONFLUENT_TAG}
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
        KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ports:
        - 2181:2181
        
    kafka:
      container_name: "kafka"
      image: confluentinc/cp-server:${CONFLUENT_TAG}
      hostname: kafka
      depends_on:
        - zookeeper
      volumes:
        - ./jolokia:/jolokia
      environment:
        # Kafka listeners - Plaintext
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_LISTENERS: "INTERNAL://:9092, EXTERNAL://:19092"
        KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092, EXTERNAL://localhost:19092"
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT, EXTERNAL:PLAINTEXT"
        KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
        KAFKA_BROKER_ID: "1"
        # REQUIRED WHEN YOU HAVE A LESS THAN 3 KAFKA BROKERS
        KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: "1"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        # CONFLUENT METRICS
        KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
        CONFLUENT_METRICS_ENABLE: 'true'
        CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
        CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: localhost:19092
        # KAFKA GENERAL CONFIGURATION
        KAFKA_DELETE_TOPIC_ENABLE: "true"
        KAFKA_AUTO_CREATE_TOPICS: "true"
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
        # KAFKA JMX MONITORING 
        KAFKA_JMX_PORT: 9999
        KAFKA_JMX_HOSTNAME: localhost
        # JOLOKIA
        KAFKA_OPTS: -javaagent:/jolokia/jolokia-jvm-1.7.1.jar=host=0.0.0.0,port=8778
      ports:
        - 19092:19092
        - 9999:9999
        - 8778:8778